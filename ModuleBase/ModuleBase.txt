框架开发目标：
1. 完全基于模块化开发
2.基于mvc进行开发，不过view和controller不是通过类来实现，而是直接用php脚本
3.会为每个action进行cache，如果发现action的时间戳大于cache，则重新进行cache。cache功能可以进行开关。
4.每个模块应该有安装（install）和卸载（uninstall）以及更新（update）的接口方法，实现IModEvent接口，安装、卸载和更新只能在cli模式下进行。
5.支持标签及模板的概念。标签及模板每个模块都可以进行定义，其他模块可以按照约定进行调用。标签的实质是为节省多次调用造成的重复编码而进行的冗余替换。模板的概念和标签类似。在模块安装及更新的时候，会进行模板和标签的替换。

开发指南
1. 模块组成方式，以user模块为例
user/
|-class/   (2选1）
|-action/ (2选1）
|-js/       （可选）
|-css/     （可选）
|-image/（可选)
|-other/ （可选）
|-upload/(可选）
|-CUserDef.php（必须存在, 实现core/IModDef.php接口，类名必须和文件名除后缀外完全一样） 
|-cache/（系统生成，开发者无须关心）

2.调用方式（url和cli）
url: 例如 /index.php?m=user&a=login&...  这样的url实际会调用user模块下action中的login.php。url的组成方式可以自己定义。
cli: php index.php m=user&a=login&.. 


安装user模块须知：
1. 在moddef/CUserDef.php中，找到install方法，看到里面有个password，修改成安全的密码