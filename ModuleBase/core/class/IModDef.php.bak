<?php
/**
 * @desc 
 * G_*:global object(module, action, tag, filter..)key
 * M_*:module key
 * A_*:action key
 * 'class' format: FILE_NAME<class_name, class_name2,...>.
 * the class_name must be defined in FILE_NAME
 * if FILE_NAME not present, '<>' must not be present and the class_name can be only one,
 * the class_name plus the CFileTypeDef::CLASS_FILE_SUFFIX will be the FILE_NAME.
 * if class_name not present, the FILE_NAME consiste of class_name and(or) CFileTypeDef::CLASS_FILE_SUFFIX,
 * if CFileTypeDef::CLASS_FILE_SUFFIX not present, the FILE_NAME was treated as class_name, 
 * then the CFileTypeDef::CLASS_FILE_SUFFIX was appended to class_name to get the FILE_NAME
 * @author Administrator
 *
 */
abstract class IModDef {

	//an valid identifier([_a-zA-Z][_a-zA-Z0-9]*)
	CONST G_NM = 'name';
	CONST G_CS = 'class';
	CONST G_DC = 'desc';
	
	CONST MOD = 'module';
	CONST M_CS = 'charset';
	CONST M_TR = 'introduce';
	
	CONST FTR = 'filter';
	CONST TAG = 'tag';
	
	CONST PAGE_ARG = 'page_arg';
	CONST PARG_TYP = 'type';    // the arg's type what appears in gettype(). default is 'string'
	CONST PARG_REQ = 'required';// the arg MUST be required in the page. default is 1
	CONST PARG_DEP = 'depend'; // the arg which appears in the same page. default is null
	CONST PARG_EMP = 'empty';  // allow emmpty on the arg(default is 0). NOTICE: the empty validation only check the length of the trimed arg
	CONST PARG_TRI = 'trim';   // ignore triming on the arg if set to 0. default is 1(trim).
	CONST PAGE_RNG = 'range'; // the range of the arg's length. split by comma, like [5,12)
	
	CONST TBDEF = 'table_def';
	CONST LTN = 'listener';
	CONST MGR = 'mgrpage';
	CONST LD_FTR = 'load_filter'; // do filter checking on each script of the module
	CONST MODEV = 'modevent';  // a class that implements the IModEvent interface
	
	/**
	 * @return array(
	 *   self::MOD => array(self::M_CS=>'gbk', G_NM=>'mod'),
	 *   self::FTR => array(
	 *   	G_NM => array(G_CS => '', G_DC => ''),
	 *   	... 
	 *   ),
	 *   self::TAG => array(
	 *  	 G_NM => array(G_CS => '', G_DC => ''),
	 *   	... 
	 *   ),
	 *   self::PAGE_ARG => array(
	 *   	'a.php' => array(
	 *   		'arg1' => array('type'=>'int', required=>true, 'range'=>'5,12'),
	 *   		'arg2' => array('type'=>'int', required=>true, depend=>'arg1')
	 *   	),
	 * 	 ),
	 * 	 self::TBDEF => array(
	 * 		'name' => '',
	 * 		....
	 * 	 ),
	 *   self::LTN => array(
	 *   	'class' => 'mod.action1,mod.action2,...'
	 *   ),
	 *   self::LD_FTR=>array(
	 *   	array(mod, ftr_name, arg1, arg2, ...),
	 *   	...
	 *   ),
	 *   self::MODEV => class_def
	 * ) 
	 */
	function desc();
	
	function install(){
	}
	
	function uninstall(){
	}
	
	function update(){
	}
}


?>